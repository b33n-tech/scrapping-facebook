import streamlit as st
import pandas as pd
import io
import re

st.set_page_config(page_title="Extraction Membres Facebook", layout="centered")
st.title("üîç Extraction intelligente des membres Facebook")
st.markdown("Collez ici les informations copi√©es depuis l'affichage du groupe Facebook (profils, anciennet√©, activit√©s)")

raw_text = st.text_area("Texte copi√©", height=300, placeholder="Collez ici...")

def detect_line_type(line):
    # Anciennet√©
    if "Membre depuis" in line:
        return "anciennete"
    # Activit√© / lieu (simple r√®gle)
    elif "√† " in line or "," in line:
        return "activite"
    # Nom (si √ßa ressemble √† un pr√©nom/nom)
    elif re.match(r"^[A-Z√â√à√ä√é√è√Ä√Ç√Ñ√î√ñ√ô√õ√ú√á][a-z√©√®√™√†√ß√Æ√Ø√∂√¥√ª√º\-']+\s+[A-Z√â√à√ä√é√è√Ä√Ç√Ñ√î√ñ√ô√õ√ú√á][a-z√©√®√™√†√ß√Æ√Ø√∂√¥√ª√º\-']+", line):
        return "nom"
    else:
        return "inconnu"

def parse_lines(text):
    lines = [line.strip() for line in text.split('\n') if line.strip()]
    parsed = []
    current = {"Nom": "", "Anciennet√©": "", "Activit√© / Lieu": ""}
    
    for line in lines:
        line_type = detect_line_type(line)

        if line_type == "nom":
            # S'il y a d√©j√† un nom en cours, on l'enregistre
            if current["Nom"]:
                parsed.append(current)
                current = {"Nom": "", "Anciennet√©": "", "Activit√© / Lieu": ""}
            current["Nom"] = line

        elif line_type == "anciennete":
            current["Anciennet√©"] = line

        elif line_type == "activite":
            current["Activit√© / Lieu"] = line

    if current["Nom"]:  # Dernier enregistrement
        parsed.append(current)

    return pd.DataFrame(parsed)

if raw_text:
    df = parse_lines(raw_text)

    if df.empty:
        st.warning("Aucune donn√©e d√©tect√©e. V√©rifie le format.")
    else:
        st.success("Extraction r√©ussie ! Voici les donn√©es :")
        st.dataframe(df, use_container_width=True)

        buffer = io.BytesIO()
        with pd.ExcelWriter(buffer, engine='xlsxwriter') as writer:
            df.to_excel(writer, index=False, sheet_name="Membres")
        
        st.download_button(
            label="üì• T√©l√©charger le fichier Excel",
            data=buffer.getvalue(),
            file_name="membres_facebook.xlsx",
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        )
